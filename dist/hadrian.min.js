"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const e={_default:{name:"Model",useSessions:!1,deserializeTactic:"always",extract:"body",clientType:"client",selfInit:!1,getUser:(e,t)=>t(null,{}),verify:(e,t,n)=>n(null,!0),serialize:(e,t)=>t(null,e),deserialize:(e,t)=>t(null,e),initOnError:{status:500},initOnSuccess:null,authenticateOnError:{status:500},authenticateOnFail:{status:401},authenticateOnSuccess:null,checkAuthenticationOnFail:{status:401},checkAuthenticationOnSuccess:null,checkAuthenticatedOnFail:{status:401},checkAuthenticatedOnSuccess:null,checkUnauthenticatedOnFail:{status:401},checkUnauthenticatedOnSuccess:null,logoutOnSuccess:null,deserializeUserOnError:{status:500},deserializeUserOnSuccess:null}},t=e=>(t,n)=>n.sendStatus(e),n=(e,n)=>{if("function"==typeof e)return e;if("object"!=typeof e)throw new Error(`Invalid ${n} input, type ${typeof e} - ${e}`);if(e.redirect)return s=e.redirect,(i=e.status)?(e,t)=>t.status(i).redirect(s):(e,t)=>t.redirect(s);var s,i;if(e.send)return((e,t)=>t?(n,s)=>s.status(t).send(e):(t,n)=>n.send(e))(e.send,e.status);if(e.json)return((e,t)=>t?(n,s)=>s.status(t).json(e):(t,n)=>n.json(e))(e.json,e.status);if(e.render)return((e,t,n={})=>t?(s,i)=>i.status(t).render(e,n):(t,s)=>s.render(e,n))(e.render,e.status,e.renderData);if(e.status)return t(e.status);if(e.sendStatus)return t(e.sendStatus);throw new Error(`Invalid ${n} input`)},s=(t,n,s)=>{const i=((t,n)=>{if(t&&!e[t])throw new Error("model is not set");return{...e[t||"_default"],...n}})(t,n);return((e,t)=>{e.onFail&&(e[`${t}OnFail`]=e.onFail),e.onError&&(e[`${t}OnError`]=e.onError),e.onSuccess&&(e[`${t}OnSuccess`]=e.onSuccess)})(i,s),(e=>{if("function"!=typeof e.verify)throw new Error("verify must be a function");if("function"!=typeof e.getUser)throw new Error("getUser must be a function")})(i),i},i=e=>{const{serialize:t}=e;return(e,n,s)=>{t(e.deserializedUser,(t,n)=>{e.hadrian.user=n,e.session.hadrian=e.hadrian,s()})}},r=(e,t,n)=>{n(null,(function(e){if(this.deserializedUser)return e(null,this.deserializedUser);t(this.hadrian.user,(t,n)=>{this.deserializedUser=n,e(t,n)})}))},a=()=>function(e){e(null,this.deserializedUser)},u=(e,t,n,s)=>{t(e,(e,t)=>{s.deserializedUser=t,n(e,t)})},c=e=>e,l=(e,t)=>{"object"==typeof e&&(t=e,e=null);const i=s(e,t,"init");if(!i.useSessions)return(e=>{if(e.initOnSuccess){const t=n(e.initOnSuccess,"initOnSuccess");return(e,n,s)=>{e.hadrian={isAuthenticated:!1},t(e,n,s)}}return(e,t,n)=>{e.hadrian={isAuthenticated:!1,auth:{}},n()}})(i);const{deserialize:a}=i,c=n(i.initOnError,"initOnError"),l="always"===i.deserializeTactic?u:r,o=(e,t,n)=>{e.session.hadrian?(e.hadrian=e.session.hadrian,e.deserializedUser=null,e.hadrian.user?l(e.hadrian.user,a,(s,i)=>{s&&c(e,t,s,n),e.user=i,n()},e):n()):(e.hadrian={isAuthenticated:!1,auth:{}},e.session.hadrian=e.hadrian,n())};return i.initOnSuccess?[o,n(i.initOnSuccess,"initOnSuccess")]:o};exports.authenticate=(e,t)=>{"object"==typeof e&&(t=e,e=null);const r=s(e,t,"authenticate"),{verify:u,getUser:o,clientType:d,name:h}=r,f=(e=>"function"==typeof e?e:(t,n)=>n(null,t[e]))(r.extract),O=n(r.authenticateOnError,"authenticateOnError"),S=n(r.authenticateOnFail,"authenticateOnFail"),p="always"===r.deserializeTactic?c:a,y=(e,t,n)=>{f(e,(s,i,r)=>s?O(e,t,s):i?void o(i,(s,r,a)=>s?O(e,t,s):r?void u(i,r,(s,a,u)=>s?O(e,t,s):a?(e.hadrian.auth[h]={clientType:d,query:i,model:h,result:a},e.hadrian.isAuthenticated=!0,e.deserializedUser=r,e.user=p(r,e),void n()):S(e,t,u||"Failed to verify"),e):S(e,t,a||"Failed to verify"),e):S(e,t,r||"Failed to verify"))},U=[];return r.selfInit&&U.push(l(r)),U.push(y),r.useSessions&&U.push(i(r)),r.authenticateOnSuccess&&U.push(n(r.authenticateOnSuccess,"authenticateOnSuccess")),1===U.length?y:U},exports.checkAuthenticated=(e,t)=>((e,t,i)=>{"object"==typeof e&&(t=e,e=null);const r=`${i}OnFail`,a=`${i}OnSuccess`,u=s(e,t,i),c=n(u[r],r);if(!u[a])return(e,t,n)=>{if(e.hadrian.isAuthenticated)return n();c(e,t)};const l=n(u[a],a);return(e,t,n)=>{if(e.hadrian.isAuthenticated)return l(e,t,n);c(e,t)}})(e,t,"checkAuthenticated"),exports.checkUnauthenticated=(e,t)=>((e,t,i)=>{"object"==typeof e&&(t=e,e=null);const r=`${i}OnFail`,a=`${i}OnSuccess`,u=s(e,t,i),c=n(u[r],r);if(!u[a])return(e,t,n)=>{if(!e.hadrian.isAuthenticated)return n();c(e,t)};const l=n(u[a],a);return(e,t,n)=>{if(!e.hadrian.isAuthenticated)return l(e,t,n);c(e,t)}})(e,t,"checkUnauthenticated"),exports.defineModel=(t,n,s)=>{if("object"==typeof t){if(s=n,!(n=t).name)throw new Error("Model must have a name");t=t.name}e[t]={name:"Model",useSessions:!1,deserializeTactic:"always",extract:"body",clientType:"client",selfInit:!1,getUser:(e,t)=>t(null,{}),verify:(e,t,n)=>n(null,!0),serialize:(e,t)=>t(null,e),deserialize:(e,t)=>t(null,e),initOnError:{status:500},initOnSuccess:null,authenticateOnError:{status:500},authenticateOnFail:{status:401},authenticateOnSuccess:null,checkAuthenticationOnFail:{status:401},checkAuthenticationOnSuccess:null,checkAuthenticatedOnFail:{status:401},checkAuthenticatedOnSuccess:null,checkUnauthenticatedOnFail:{status:401},checkUnauthenticatedOnSuccess:null,logoutOnSuccess:null,deserializeUserOnError:{status:500},deserializeUserOnSuccess:null,...n},e[t].name=t,e[t].isDefault=s,s&&(e._default=e[t])},exports.deserializeUser=(e,t)=>{"object"==typeof e&&(t=e,e=null);const i=s(e,t,"deserializeUser"),r=n(i.deserializeUserOnError,"deserializeUserOnError"),a=(e,t,n)=>{if(!e.user)return n();e.user(e=>{if(e)return r();n()})};return i.deserializeUserOnSuccess?[a,n(i.deserializeUserOnSuccess,"deserializeUserOnSuccess")]:a},exports.init=l,exports.initiate=l,exports.logout=(e,t)=>{"object"==typeof e&&(t=e,e=null);const i=s(e,t,"logout");if(!i.useSessions)throw new Error("Cannot use Logout middleware when use sessions set false in model");const r=(e,t,n)=>{delete e.user,e.hadrian={isAuthenticated:!1,auth:{}},e.session.hadrian=e.hadrian,n()};return i.logoutOnSuccess?[r,n(i.logoutOnSuccess,"logoutOnSuccess")]:r},exports.models=e,exports.modifyModel=(t,n)=>{if(!e[t])throw new Error("Cannot modifyModel a model that is not set");const{isDefault:s}=e[t];Object.assign(e[t],n),e[t].isDefault=s},exports.saveSession=i;
